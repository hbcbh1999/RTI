C-----------------------------------------------------------------------
      subroutine uservp(ix,iy,iz,eg) ! set variable properties
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)

      udiff  = 1.E-31
      utrans = 1.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userf(ix,iy,iz,eg) ! set acceleration term
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

c     Note: this is an acceleration term, NOT a force!
c     Thus, ffx will subsequently be multiplied by rho(x,t).

      common /myvalues/ rayleigh
      common /cmean_t/ tz_mean(lx1,ly1,lz1,lelt)

      integer e,f,eg

      e = gllel(eg)

      ffx = 0.0
      ffy = 0.0
c     ffz = rayleigh*(temp-tz_mean(ix,iy,iz,e))
      ffz = rayleigh*temp

      return
      end
c-----------------------------------------------------------------------
      subroutine userq(ix,iy,iz,eg) ! set source term
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)

      qvol   = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userq2(q) ! set source term
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      real q(lx1, ly1, lz1, lelt)

c      if (ifcoup) then
c         call nekMOAB_import_vars(tTag, 0, q)
c      elseif (ifvcoup) then
c         call nekMOAB_import_vars(vtTag, 1, q)
c      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc(ix,iy,iz,iside,ieg) ! set up boundary conditions
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

c      if (cbc(iside,gllel(ieg),ifield).eq.'v01')

      ux   = 0.0
      uy   = 0.0
      uz   = 0.0
      temp = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine useric(ix,iy,iz,eg) ! set up initial conditions
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      common /cmean_t/ tz_mean(lx1,ly1,lz1,lelt)

      integer e,eg
      integer imode, mode, nmode
      real atwood 
      integer key
      save    key
      data    key  / 9999 /

      ux   = 0.0
      uy   = 0.0
      uz   = 0.0

      atwood = 0.001
      mode = 3
      nmode = 1
      delta = 0.1
      eps  = 0.0033333333333/nmode
      zz   = 0.
c      do imode = mode, mode+nmode-1
c        zz = zz + sin(imode*pi*x)*sin(imode*pi*y)
c      enddo
      if (x > 1./3. .and. x < 2./3. .and. y>1./3. .and. y<2./3.) then
        zz = zz + sin(3 * pi * x)*sin(3 * pi * y)
      endif
      zz = -(z + eps*zz)/delta

      e = gllel(eg)
      tz_mean(ix,iy,iz,e) = atwood*atan(zz)/pi ! Save this to remove hydrostatic
      temp = tz_mean(ix,iy,iz,e) !+ eps*sin(16*pi*x) 
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk()
      include 'SIZE'
      include 'TOTAL'

      if (istep.eq.0) call outpost(vx,vy,vz,pr,t,'   ')

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat()   ! This routine to modify element vertices
      include 'SIZE'
      include 'TOTAL'

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2()  ! This routine to modify mesh coordinates
      include 'SIZE'
      include 'TOTAL'

      common /myvalues/ rayleigh

      rayleigh = 9.8


      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3()
      include 'SIZE'
      include 'TOTAL'

      return
      end
c-----------------------------------------------------------------------
